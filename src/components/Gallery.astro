---
type Props = {
	filepath: string
}

const { filepath } = Astro.props

// glob has to be statically analyzed, can't directly use variables
const images = await (async (filepath) => {
	switch (filepath) {
		case "../assets/christmas2023/*.jpg":
			return await Astro.glob("../assets/christmas2023/*.jpg")
		case "../assets/textiles/*.jpg":
			return await Astro.glob("../assets/textiles/*.jpg")
		case "../assets/animals/*.jpg":
			return await Astro.glob("../assets/animals/*.jpg")
	}

	throw new Error("Unreachable code")
})(filepath)

function splitArrayIntoFour(array: Record<string, any>[]) {
	const length = array.length
	const partSize = Math.ceil(length / 4)

	const result = []

	for (let i = 0; i < length; i += partSize) {
		const part = array.slice(i, i + partSize)
		result.push(part)
	}

	return result
}

const imageArrays = splitArrayIntoFour(images)
---

<div class="grid grid-cols-3 gap-4 p-16">
	<div class="grid">
		{imageArrays[0]?.map((image) => <img class="h-auto max-w-full" src={image.default.src} alt="" />)}
	</div>
	<div class="grid">
		{imageArrays[1]?.map((image) => <img class="h-auto max-w-full" src={image.default.src} alt="" />)}
	</div>
	<div class="grid">
		{imageArrays[2]?.map((image) => <img class="h-auto max-w-full" src={image.default.src} alt="" />)}
	</div>
</div>
